<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>screenplay</string>
		<string>splay</string>
	</array>
	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>Screenplay</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>Line begins with 3 spaces, then a newline or the end of the line</string>
			<key>match</key>
			<string>^[ ]{3}(\n|$)</string>
			<key>name</key>
			<string>source.linebreak</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>lines beginning with one tab, 6-9 tabs, 3 tabs with no opening parentheses, or a space</string>
			<key>match</key>
			<string>^(\t|\t{6,9})[^\t]+|^\t{3}[^(\t].*|^[ ].*</string>
			<key>name</key>
			<string>invalid.illegal</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Any line that begins with 10 tabs, then an optional colon, then a newline or the end of the line</string>
			<key>match</key>
			<string>^\t{10}:?(\n|$)</string>
			<key>name</key>
			<string>meta.blank.transition</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Any line that begins with 4 tabs, then a newline or the end of the line</string>
			<key>match</key>
			<string>^\t{4}(\n|$)</string>
			<key>name</key>
			<string>meta.blank.character</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Any line that begins with 3 tabs, then a newline or the end of the line</string>
			<key>match</key>
			<string>^\t{3}(\n|$)</string>
			<key>name</key>
			<string>meta.blank.parenthetical</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Any line that begins with 2 tabs, then a newline or the end of the line</string>
			<key>match</key>
			<string>^\t{2}(\n|$)</string>
			<key>name</key>
			<string>meta.blank.dialogue</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>comment</key>
			<string>any text (not matched elsewhere) wrapped between \* and *\</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>any line that begins with 50 equals signs then an optional newline</string>
			<key>match</key>
			<string>^[\=]{50,}\n?</string>
			<key>name</key>
			<string>meta.separator.page-break</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^in(\n|$)</string>
			<key>name</key>
			<string>meta.primer.slugline.int</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^ex(\n|$)</string>
			<key>name</key>
			<string>meta.primer.slugline.ext</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^[^A-Z]+\s([^A-Z]+\s)?([^A-Z]+\s)?([^A-Z]+\s)?([^A-Z]+\s)?(\-(\n|$))</string>
			<key>name</key>
			<string>keyword.slugline.primer.arbitrary</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Any line that beins with 1 or more word characters then (optionally) a space and more than 1 word characters, then a space, then (ignoring case) either: "to", "up", "in", then the end of the line with an optional newline.</string>
			<key>match</key>
			<string>^\w+(\s\w+)?\s(?i:to|up|in)(?i:\son)?([\.\:]\s*)?$\n?</string>
			<key>name</key>
			<string>constant.primer.transition.colon</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Any line that beins with 1 or more word characters then (optionally) a space and more than 1 word characters, then a space, then (ignoring case) either: "black" or "out", then the end of the line with an optional newline.</string>
			<key>match</key>
			<string>^\w+(\s\w+)?\s(?i:black|out)([\.\:]\s*)?$\n?</string>
			<key>name</key>
			<string>constant.primer.transition.terminal</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\t{5}[^\t]+</string>
			<key>comment</key>
			<string>Any line that begins with 5 tabs, then more than 1 non-tabs</string>
			<key>end</key>
			<string>\n|$</string>
			<key>name</key>
			<string>constant.centered</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inline</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>setting</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>location</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>time</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with a slugline leader, a space, then anything, then a space, then a dash or a period, then anytything, then a newline or one character and the end of the line.</string>
			<key>match</key>
			<string>^((EXT|INT|I/E|INT\/EXT|int\/ext|int|ext|i/e)\.\s+)((.*)(\s-|\.)+)(.*(\n|.$))</string>
			<key>name</key>
			<string>keyword.slugline.full</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>setting</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>location</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with a slugline leader, a space, then anything, then a space, then a newline or one character and the end of the line.</string>
			<key>match</key>
			<string>^((EXT|INT|I/E|int|ext|i/e)\.\s)(.*(\n|.$))?</string>
			<key>name</key>
			<string>keyword.slugline.short</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>location</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>location</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>time</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with anything that is not a lowercase letter or a tab more than one times, repeated once, then a space, then a dash or a period, then a non-lowercase letter more than once, then anything that is not a lowercase letter or a space, then the end of the line or one character and the end of the line</string>
			<key>match</key>
			<string>^([^a-z\t]+)(([^a-z\t]+)(\s[\-]|\.))([^a-z]+([^a-z\s](\n|.$)))</string>
			<key>name</key>
			<string>keyword.slugline.arbitrary.full</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>location</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with anything that is not a lowercase letter, a tab, or a period more than one times, then anything that is not a lowercase letter, then the end of the line or one character and the end of the line</string>
			<key>match</key>
			<string>^([^a-z\t\.]+([^a-z](\n|.$)))</string>
			<key>name</key>
			<string>keyword.slugline.arbitrary.short</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>whitespace</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>transition</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with 10 tabs, a non-tab more than once, then the end of the line or one character and the end of the line</string>
			<key>match</key>
			<string>(^\t{10})([^\t]+(\n|.$))</string>
			<key>name</key>
			<string>constant.transition</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>whitespace</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.tab-trigger</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>character</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with 4 tabs, then a non-tab more than once, then anything, then anything, then a newline or one character and the end of the line</string>
			<key>match</key>
			<string>(^\t{4})(([^\t]*(.*(\n|.$))))</string>
			<key>name</key>
			<string>string.character</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(^\t{3})(\(\))(\n|$)</string>
			<key>name</key>
			<string>string.parenthetical.blank</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>whitespace</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>parenthetical</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with 3 tabs, then an opening parenthetical, then anything, then a closing parenthetical, then a space any number of times, then a newline or a  closing parenthetical, then a space any number of times, and the end of the line.</string>
			<key>match</key>
			<string>(^\t{3})(\(.*(\)[ ]*\n|\)[ ]*$))</string>
			<key>name</key>
			<string>string.parenthetical</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(\t{2})(?=\S)</string>
			<key>comment</key>
			<string>Any line that begins with 2 tabs, then a non-tab</string>
			<key>end</key>
			<string>^(?!\1(?=\S))</string>
			<key>name</key>
			<string>string.dialogue</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inline</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>The end of the line</string>
					<key>match</key>
					<string>(\n|.$)</string>
					<key>name</key>
					<string>eol</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>dialogue that is wrapped in parentheticals</string>
					<key>match</key>
					<string>(?&lt;=\t{2})\(.+?\)\s*$</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(?=[^\s]+\s\S+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>eol.1</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with a non-space more than once, then a space, then a non-space more than once</string>
			<key>end</key>
			<string>(\n)</string>
			<key>name</key>
			<string>meta.action</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inline</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>The end of the line</string>
					<key>match</key>
					<string>.$(?!\n)</string>
					<key>name</key>
					<string>eol.2</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>eol</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Any line that begins with a non-space more than once, then another non-space character, then the end of the line and an optional newline</string>
			<key>match</key>
			<string>^(\S+$\n?)</string>
			<key>name</key>
			<string>meta.tab-trigger</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\t{3}\(</string>
			<key>comment</key>
			<string>any line begins with 3 tabs, then an opening parenthetical</string>
			<key>end</key>
			<string>[^)].*</string>
			<key>name</key>
			<string>invalid.illegal</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>inline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>anything between asterisks</string>
					<key>match</key>
					<string>\B\*\S[^\*]+\S\*\B</string>
					<key>name</key>
					<string>markup.bold.screenplay</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>anything between underscores</string>
					<key>match</key>
					<string>\_\S[^\_]+\S\_</string>
					<key>name</key>
					<string>markup.underline.screenplay</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.screenplay</string>
	<key>uuid</key>
	<string>00A67F9D-48F6-423E-A769-959134122DE8</string>
</dict>
</plist>
